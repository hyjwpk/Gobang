import{Shape as s}from"./Shape.js";export class Chessboard extends s{constructor(s,t,h,i,r){super(s,t),this.rows=h,this.cols=i,this.cellSize=r,this.board=Array.from({length:h},(()=>Array(i).fill(null)))}drawOn(s){s.save();for(let t=0;t<this.rows;t++){const h=this.originY+t*this.cellSize;s.beginPath(),s.moveTo(this.originX,h),s.lineTo(this.originX+(this.cols-1)*this.cellSize,h),s.stroke()}for(let t=0;t<this.cols;t++){const h=this.originX+t*this.cellSize;s.beginPath(),s.moveTo(h,this.originY),s.lineTo(h,this.originY+(this.rows-1)*this.cellSize),s.stroke()}s.restore()}hasChess(s,t){return null!==this.board[s][t]}putChess(s,t,h){return!(s<0||s>=this.rows||t<0||t>=this.cols)&&(!this.hasChess(s,t)&&(this.board[s][t]=h,!0))}}