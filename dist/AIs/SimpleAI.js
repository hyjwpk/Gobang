import{AI as t}from"./AI.js";export class SimpleAI extends t{constructor(t){super(t)}getMove(){const t=this.initializeScores();for(let r=0;r<this.chessboard.rows;r++)for(let e=0;e<this.chessboard.cols;e++)null===this.chessboard.board[r][e]&&(t[r][e]=this.computeScore(r,e,!0),t[r][e]+=this.computeScore(r,e,!1));let r=null,e=-1/0;for(let s=0;s<this.chessboard.rows;s++)for(let i=0;i<this.chessboard.cols;i++)t[s][i]>e&&null===this.chessboard.board[s][i]&&(e=t[s][i],r={row:s,col:i});return r}initializeScores(){return Array.from({length:this.chessboard.rows},(()=>Array(this.chessboard.cols).fill(0)))}computeScore(t,r,e){const s=[{dr:0,dc:1},{dr:1,dc:0},{dr:1,dc:1},{dr:1,dc:-1}];let i=0;for(const{dr:o,dc:l}of s)i+=this.evaluateLine(t,r,o,l,e);return i}evaluateLine(t,r,e,s,i){const o=i;let l=0,n=0;for(let i=1;i<=4;i++){const c=t-e*i,h=r-s*i;if(c<0||c>=this.chessboard.rows||h<0||h>=this.chessboard.cols){n++;break}const f=this.chessboard.board[c][h];if(f!==o){if(null===f){0;break}n++;break}l++}for(let i=1;i<=4;i++){const c=t+e*i,h=r+s*i;if(c<0||c>=this.chessboard.rows||h<0||h>=this.chessboard.cols){n++;break}const f=this.chessboard.board[c][h];if(f!==o){if(null===f){0;break}n++;break}l++}return l>=4?100:3===l&&0===n?50:3===l&&1===n?10:2===l&&0===n?5:2===l&&1===n?2:1===l&&0===n?1:0}undoLastMove(t){}}